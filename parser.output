Terminals unused in grammar

   TRANSFORMAR
   '>'
   '<'
   '='
   '-'
   '+'
   '*'
   '/'
   '^'


Grammar

    0 $accept: program $end

    1 program: commands

    2 commands: %empty
    3         | command ';' commands

    4 command: SKIP

    5 $@1: %empty

    6 $@2: %empty

    7 $@3: %empty

    8 command: CARREGA $@1 IDENTIFIER $@2 IDENTIFIER $@3
    9        | ESCALONAR

   10 $@4: %empty

   11 command: DIVISAO $@4 exp
   12        | TREINAMENTO
   13        | PREDICAO
   14        | RESULTADO resultados
   15        | READ IDENTIFIER
   16        | WRITE IDENTIFIER

   17 $@5: %empty

   18 command: IDENTIFIER ASSGNOP $@5 exp

   19 $@6: %empty

   20 $@7: %empty

   21 $@8: %empty

   22 command: $@6 IF exp $@7 THEN commands FI $@8

   23 resultados: ACURACIA

   24 exp: NUMINT
   25    | NUMFLT
   26    | IDENTIFIER

   27 $@9: %empty

   28 $@10: %empty

   29 exp: '(' $@9 exp ')' $@10


Terminals, with rules where they appear

$end (0) 0
'(' (40) 29
')' (41) 29
'*' (42)
'+' (43)
'-' (45)
'/' (47)
';' (59) 3
'<' (60)
'=' (61)
'>' (62)
'^' (94)
error (256)
SKIP (258) 4
IF (259) 22
THEN (260) 22
READ (261) 15
WRITE (262) 16
FI (263) 22
NUMINT (264) 24
NUMFLT (265) 25
IDENTIFIER (266) 8 15 16 18 26
CARREGA (267) 8
TREINAMENTO (268) 12
PREDICAO (269) 13
RESULTADO (270) 14
ACURACIA (271) 23
DIVISAO (272) 11
ESCALONAR (273) 9
TRANSFORMAR (274)
ASSGNOP (275) 18


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
commands (34)
    on left: 2 3, on right: 1 3 22
command (35)
    on left: 4 8 9 11 12 13 14 15 16 18 22, on right: 3
$@1 (36)
    on left: 5, on right: 8
$@2 (37)
    on left: 6, on right: 8
$@3 (38)
    on left: 7, on right: 8
$@4 (39)
    on left: 10, on right: 11
$@5 (40)
    on left: 17, on right: 18
$@6 (41)
    on left: 19, on right: 22
$@7 (42)
    on left: 20, on right: 22
$@8 (43)
    on left: 21, on right: 22
resultados (44)
    on left: 23, on right: 14
exp (45)
    on left: 24 25 26 29, on right: 11 18 22 29
$@9 (46)
    on left: 27, on right: 29
$@10 (47)
    on left: 28, on right: 29


State 0

    0 $accept: . program $end

    SKIP         shift, and go to state 1
    READ         shift, and go to state 2
    WRITE        shift, and go to state 3
    IDENTIFIER   shift, and go to state 4
    CARREGA      shift, and go to state 5
    TREINAMENTO  shift, and go to state 6
    PREDICAO     shift, and go to state 7
    RESULTADO    shift, and go to state 8
    DIVISAO      shift, and go to state 9
    ESCALONAR    shift, and go to state 10

    IF        reduce using rule 19 ($@6)
    $default  reduce using rule 2 (commands)

    program   go to state 11
    commands  go to state 12
    command   go to state 13
    $@6       go to state 14


State 1

    4 command: SKIP .

    $default  reduce using rule 4 (command)


State 2

   15 command: READ . IDENTIFIER

    IDENTIFIER  shift, and go to state 15


State 3

   16 command: WRITE . IDENTIFIER

    IDENTIFIER  shift, and go to state 16


State 4

   18 command: IDENTIFIER . ASSGNOP $@5 exp

    ASSGNOP  shift, and go to state 17


State 5

    8 command: CARREGA . $@1 IDENTIFIER $@2 IDENTIFIER $@3

    $default  reduce using rule 5 ($@1)

    $@1  go to state 18


State 6

   12 command: TREINAMENTO .

    $default  reduce using rule 12 (command)


State 7

   13 command: PREDICAO .

    $default  reduce using rule 13 (command)


State 8

   14 command: RESULTADO . resultados

    ACURACIA  shift, and go to state 19

    resultados  go to state 20


State 9

   11 command: DIVISAO . $@4 exp

    $default  reduce using rule 10 ($@4)

    $@4  go to state 21


State 10

    9 command: ESCALONAR .

    $default  reduce using rule 9 (command)


State 11

    0 $accept: program . $end

    $end  shift, and go to state 22


State 12

    1 program: commands .

    $default  reduce using rule 1 (program)


State 13

    3 commands: command . ';' commands

    ';'  shift, and go to state 23


State 14

   22 command: $@6 . IF exp $@7 THEN commands FI $@8

    IF  shift, and go to state 24


State 15

   15 command: READ IDENTIFIER .

    $default  reduce using rule 15 (command)


State 16

   16 command: WRITE IDENTIFIER .

    $default  reduce using rule 16 (command)


State 17

   18 command: IDENTIFIER ASSGNOP . $@5 exp

    $default  reduce using rule 17 ($@5)

    $@5  go to state 25


State 18

    8 command: CARREGA $@1 . IDENTIFIER $@2 IDENTIFIER $@3

    IDENTIFIER  shift, and go to state 26


State 19

   23 resultados: ACURACIA .

    $default  reduce using rule 23 (resultados)


State 20

   14 command: RESULTADO resultados .

    $default  reduce using rule 14 (command)


State 21

   11 command: DIVISAO $@4 . exp

    NUMINT      shift, and go to state 27
    NUMFLT      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 30

    exp  go to state 31


State 22

    0 $accept: program $end .

    $default  accept


State 23

    3 commands: command ';' . commands

    SKIP         shift, and go to state 1
    READ         shift, and go to state 2
    WRITE        shift, and go to state 3
    IDENTIFIER   shift, and go to state 4
    CARREGA      shift, and go to state 5
    TREINAMENTO  shift, and go to state 6
    PREDICAO     shift, and go to state 7
    RESULTADO    shift, and go to state 8
    DIVISAO      shift, and go to state 9
    ESCALONAR    shift, and go to state 10

    IF        reduce using rule 19 ($@6)
    $default  reduce using rule 2 (commands)

    commands  go to state 32
    command   go to state 13
    $@6       go to state 14


State 24

   22 command: $@6 IF . exp $@7 THEN commands FI $@8

    NUMINT      shift, and go to state 27
    NUMFLT      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 30

    exp  go to state 33


State 25

   18 command: IDENTIFIER ASSGNOP $@5 . exp

    NUMINT      shift, and go to state 27
    NUMFLT      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 30

    exp  go to state 34


State 26

    8 command: CARREGA $@1 IDENTIFIER . $@2 IDENTIFIER $@3

    $default  reduce using rule 6 ($@2)

    $@2  go to state 35


State 27

   24 exp: NUMINT .

    $default  reduce using rule 24 (exp)


State 28

   25 exp: NUMFLT .

    $default  reduce using rule 25 (exp)


State 29

   26 exp: IDENTIFIER .

    $default  reduce using rule 26 (exp)


State 30

   29 exp: '(' . $@9 exp ')' $@10

    $default  reduce using rule 27 ($@9)

    $@9  go to state 36


State 31

   11 command: DIVISAO $@4 exp .

    $default  reduce using rule 11 (command)


State 32

    3 commands: command ';' commands .

    $default  reduce using rule 3 (commands)


State 33

   22 command: $@6 IF exp . $@7 THEN commands FI $@8

    $default  reduce using rule 20 ($@7)

    $@7  go to state 37


State 34

   18 command: IDENTIFIER ASSGNOP $@5 exp .

    $default  reduce using rule 18 (command)


State 35

    8 command: CARREGA $@1 IDENTIFIER $@2 . IDENTIFIER $@3

    IDENTIFIER  shift, and go to state 38


State 36

   29 exp: '(' $@9 . exp ')' $@10

    NUMINT      shift, and go to state 27
    NUMFLT      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 30

    exp  go to state 39


State 37

   22 command: $@6 IF exp $@7 . THEN commands FI $@8

    THEN  shift, and go to state 40


State 38

    8 command: CARREGA $@1 IDENTIFIER $@2 IDENTIFIER . $@3

    $default  reduce using rule 7 ($@3)

    $@3  go to state 41


State 39

   29 exp: '(' $@9 exp . ')' $@10

    ')'  shift, and go to state 42


State 40

   22 command: $@6 IF exp $@7 THEN . commands FI $@8

    SKIP         shift, and go to state 1
    READ         shift, and go to state 2
    WRITE        shift, and go to state 3
    IDENTIFIER   shift, and go to state 4
    CARREGA      shift, and go to state 5
    TREINAMENTO  shift, and go to state 6
    PREDICAO     shift, and go to state 7
    RESULTADO    shift, and go to state 8
    DIVISAO      shift, and go to state 9
    ESCALONAR    shift, and go to state 10

    IF        reduce using rule 19 ($@6)
    $default  reduce using rule 2 (commands)

    commands  go to state 43
    command   go to state 13
    $@6       go to state 14


State 41

    8 command: CARREGA $@1 IDENTIFIER $@2 IDENTIFIER $@3 .

    $default  reduce using rule 8 (command)


State 42

   29 exp: '(' $@9 exp ')' . $@10

    $default  reduce using rule 28 ($@10)

    $@10  go to state 44


State 43

   22 command: $@6 IF exp $@7 THEN commands . FI $@8

    FI  shift, and go to state 45


State 44

   29 exp: '(' $@9 exp ')' $@10 .

    $default  reduce using rule 29 (exp)


State 45

   22 command: $@6 IF exp $@7 THEN commands FI . $@8

    $default  reduce using rule 21 ($@8)

    $@8  go to state 46


State 46

   22 command: $@6 IF exp $@7 THEN commands FI $@8 .

    $default  reduce using rule 22 (command)
